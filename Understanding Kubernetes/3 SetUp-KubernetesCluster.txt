FIRST STEP:
###########
[1] Import the VM on WMWare
[2] Make a Full Clone of it.
[3] Consider one VM as master and another as node.
[4] VM Settings - Processors=2+2 | Memory=16GB
[5] Check Internet Connectivity on both the VMs. 




COMMANDS ON MASTER:
###################
[1] yum clean all 
[2] yum install kubeadm -y
---------------------------------------------------------------
If you get error for bridge
============================
echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables 
sysctl net.bridge.bridge-nf-call-iptables=1 
sysctl net.bridge.bridge-nf-call-ip6tables=1 
sysctl -w net.ipv4.ip_forward=1 
---------------------------------------------------------------
[3] systemctl start kubelet 
[4] systemctl enable kubelet 
[5] kubeadm init 
[6] mkdir -p $HOME/.kube 
[7] cp -i /etc/kubernetes/admin.conf $HOME/.kube/config 
[8] chown $(id -u):$(id -g) $HOME/.kube/config 
[9] kubectl get nodes 
[10] kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')" 
[11] kubectl get nodes 





COMMANDS ON NODE:
#################
---------------------------------------------------------------
NOTE: To check if we are on Node. The prompt will be root@node1.
If not, we need to follow the below steps:
[1] hostnamectl set-hostname node1.example.com 
[2] exit 
[3] Launch new Terminal. 
[4] Check if the prompt is root@node1 
---------------------------------------------------------------
[1] yum clean all 
[2] yum install kubeadm -y

---------------------------------------------------------------
If you get error for bridge
============================
echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables 
sysctl net.bridge.bridge-nf-call-iptables=1 
sysctl net.bridge.bridge-nf-call-ip6tables=1 
sysctl -w net.ipv4.ip_forward=1 
---------------------------------------------------------------
 
[3] systemctl start kubelet 
[4] systemctl enable kubelet 
[5] Run the JOIN command | From Master Initiation Logs
[6] Navigate to Master Node and check 'kubectl get nodes' 


