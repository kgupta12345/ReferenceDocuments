kubectl get nodeskubectl describe node master.example.comkubectl run application2 --image=rahulvaish/springbootdocker --port=8080vi appdeploymentfromyml.ymlappdeploymentfromymlapiVersion: extensions/v2beta1kind: Deploymentmetadata:  name: appdeploymentfromymlspec:  replicas: 1  template:    metadata:      labels:        app: appdeploymentfromyml    spec:      containers:      - name: appdeploymentfromyml        image: rahulvaish/springbootdocker        ports:        - containerPort: 8080kubectl create -f applicationdeploymentfromyml.ymlkubectl get deploymentskubectl get pods -o wide [To determine, in which node this deployment happened]kubectl describe deployment application2kubectl edit deployment application2 [If we want to change the replicas of pods]kubectl delete deployment application2kubectl get podskubectl describe pod <podId>kubectl delete pod <podId>kubectl get namespacesvi namespace.yml_____________________________apiVersion: v1kind: Namespacemetadata:   name: rahulvaishnamespace   _____________________________kubectl create -f namespace.ymlkubectl get pod --all-namespaceskubectl config set-context $(kubectl config current-context) --namespace=rahulvaishnamespacekubectl run application4 --image=rahulvaish/springbootdocker --port=8080  kubectl get pod --all-namespaceskubectl run application5 --image=rahulvaish/springbootdocker --port=8080 --n defaultkubectl get pod --all-namespacescd .kubecat config